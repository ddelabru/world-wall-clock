# mypy: ignore-errors

import urwid
from _typeshed import Incomplete

class TreeWidgetError(RuntimeError): ...

class TreeWidget(urwid.WidgetWrap):
    indent_cols: int
    unexpanded_icon: Incomplete
    expanded_icon: Incomplete
    is_leaf: Incomplete
    expanded: bool
    def __init__(self, node) -> None: ...
    def selectable(self): ...
    def get_indented_widget(self): ...
    def update_expanded_icon(self) -> None: ...
    def get_indent_cols(self): ...
    def get_inner_widget(self): ...
    def load_inner_widget(self): ...
    def get_node(self): ...
    def get_display_text(self): ...
    def next_inorder(self): ...
    def prev_inorder(self): ...
    def keypress(self, size, key: str) -> str | None: ...
    def mouse_event(
        self, size, event, button: int, col: int, row: int, focus: bool
    ) -> bool: ...
    def first_child(self): ...
    def last_child(self): ...

class TreeNode:
    def __init__(
        self,
        value,
        parent: Incomplete | None = ...,
        key: Incomplete | None = ...,
        depth: Incomplete | None = ...,
    ) -> None: ...
    def get_widget(self, reload: bool = ...): ...
    def load_widget(self): ...
    def get_depth(self): ...
    def get_index(self): ...
    def get_key(self): ...
    def set_key(self, key) -> None: ...
    def change_key(self, key) -> None: ...
    def get_parent(self): ...
    def load_parent(self) -> None: ...
    def get_value(self): ...
    def is_root(self): ...
    def next_sibling(self): ...
    def prev_sibling(self): ...
    def get_root(self): ...

class ParentNode(TreeNode):
    def __init__(
        self,
        value,
        parent: Incomplete | None = ...,
        key: Incomplete | None = ...,
        depth: Incomplete | None = ...,
    ) -> None: ...
    def get_child_keys(self, reload: bool = ...): ...
    def load_child_keys(self) -> None: ...
    def get_child_widget(self, key): ...
    def get_child_node(self, key, reload: bool = ...): ...
    def load_child_node(self, key) -> None: ...
    def set_child_node(self, key, node) -> None: ...
    def change_child_key(self, oldkey, newkey) -> None: ...
    def get_child_index(self, key): ...
    def next_child(self, key): ...
    def prev_child(self, key): ...
    def get_first_child(self): ...
    def get_last_child(self): ...
    def has_children(self): ...

class TreeWalker(urwid.ListWalker):
    focus: Incomplete
    def __init__(self, start_from) -> None: ...
    def get_focus(self): ...
    def set_focus(self, focus) -> None: ...
    def get_next(self, start_from): ...
    def get_prev(self, start_from): ...

class TreeListBox(urwid.ListBox):
    def keypress(self, size: tuple[int, int], key: str) -> str | None: ...
    def unhandled_input(self, size: tuple[int, int], data: str) -> str | None: ...
    def collapse_focus_parent(self, size: tuple[int, int]) -> None: ...
    def move_focus_to_parent(self, size: tuple[int, int]) -> None: ...
    def focus_home(self, size: tuple[int, int]) -> None: ...
    def focus_end(self, size: tuple[int, int]) -> None: ...
