# mypy: ignore-errors

import abc
import typing
from .constants import Sizing as Sizing
from .filler import Filler as Filler
from .widget import Widget as Widget
from _typeshed import Incomplete
from collections.abc import Generator, Iterator
from typing_extensions import Literal
from urwid.canvas import (
    CanvasCombine as CanvasCombine,
    CompositeCanvas as CompositeCanvas,
)
from urwid.util import is_mouse_press as is_mouse_press

class WidgetContainerMixin(metaclass=abc.ABCMeta):
    def __getitem__(self, position) -> Widget: ...
    def get_focus_path(self): ...
    def set_focus_path(self, positions) -> None: ...
    def get_focus_widgets(self) -> list[Widget]: ...
    @property
    @abc.abstractmethod
    def focus(self) -> Widget: ...

class WidgetContainerListContentsMixin(metaclass=abc.ABCMeta):
    def __iter__(self) -> Iterator[int]: ...
    def __reversed__(self) -> Iterator[int]: ...
    def __len__(self) -> int: ...
    @property
    @abc.abstractmethod
    def contents(self) -> list[tuple[Widget, typing.Any]]: ...
    @property
    @abc.abstractmethod
    def focus_position(self) -> int | None: ...

class FrameError(Exception): ...

class Frame(Widget, WidgetContainerMixin):
    focus_part: Incomplete
    def __init__(
        self,
        body: Widget,
        header: Widget | None = ...,
        footer: Widget | None = ...,
        focus_part: Literal["header", "footer", "body"] = ...,
    ) -> None: ...
    @property
    def header(self) -> Widget | None: ...
    def get_header(self) -> Widget | None: ...
    def set_header(self, header: Widget | None): ...
    @property
    def body(self) -> Widget: ...
    def get_body(self) -> Widget: ...
    def set_body(self, body: Widget) -> None: ...
    @property
    def footer(self) -> Widget | None: ...
    def get_footer(self) -> Widget | None: ...
    def set_footer(self, footer: Widget | None) -> None: ...
    @property
    def focus_position(self) -> Literal["header", "footer", "body"]: ...
    def get_focus(self) -> Literal["header", "footer", "body"]: ...
    def set_focus(self, part: Literal["header", "footer", "body"]) -> None: ...
    @property
    def focus(self) -> Widget: ...
    @property
    def contents(self): ...
    def _contents__getitem__(self, key: Literal["header", "footer", "body"]): ...
    def _contents__setitem__(self, key: Literal["header", "footer", "body"], value): ...
    def _contents__delitem__(self, key: Literal["header", "footer", "body"]): ...
    def options(self) -> None: ...
    def frame_top_bottom(
        self, size: tuple[int, int], focus: bool
    ) -> tuple[tuple[int, int], tuple[int, int]]: ...
    def render(self, size: tuple[int, int], focus: bool = ...) -> CompositeCanvas: ...
    def keypress(self, size: tuple[int, int], key: str) -> str | None: ...
    def mouse_event(
        self, size: tuple[int, int], event, button: int, col: int, row: int, focus: bool
    ) -> bool | None: ...
    def get_cursor_coords(self, size: tuple[int, int]) -> tuple[int, int] | None: ...
    def __iter__(self): ...
    def __reversed__(self) -> Generator[Incomplete, None, None]: ...
