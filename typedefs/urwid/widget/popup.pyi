# mypy: ignore-errors

from _typeshed import Incomplete
from urwid.canvas import Canvas as Canvas, CompositeCanvas as CompositeCanvas

from .constants import Sizing as Sizing
from .overlay import Overlay as Overlay
from .widget import (
    Widget as Widget,
    delegate_to_widget_mixin as delegate_to_widget_mixin,
)
from .widget_decoration import WidgetDecoration as WidgetDecoration

class PopUpLauncher(Incomplete, WidgetDecoration):
    def __init__(self, original_widget: Widget) -> None: ...
    def create_pop_up(self) -> None: ...
    def get_pop_up_parameters(self) -> None: ...
    def open_pop_up(self) -> None: ...
    def close_pop_up(self) -> None: ...
    def render(self, size, focus: bool = ...) -> CompositeCanvas | Canvas: ...

class PopUpTarget(WidgetDecoration):
    def __init__(self, original_widget: Widget) -> None: ...
    def render(self, size: tuple[int, int], focus: bool = ...) -> Canvas: ...
    def get_cursor_coords(self, size: tuple[int, int]) -> tuple[int, int] | None: ...
    def get_pref_col(self, size: tuple[int, int]) -> int: ...
    def keypress(self, size: tuple[int, int], key: str) -> str | None: ...
    def move_cursor_to_coords(self, size: tuple[int, int], x: int, y: int): ...
    def mouse_event(
        self, size: tuple[int, int], event, button: int, x: int, y: int, focus: bool
    ) -> bool | None: ...
    def pack(
        self, size: tuple[int, int] | None = ..., focus: bool = ...
    ) -> tuple[int, int]: ...
